{
  "Vue Bootstrapping": {
    "prefix": "v-bootstrap",
    "description": "Vue bootstrap snippet",
    "body": [
      "new Vue({",
      "  el: \"#app-main\"",
      "})"
    ]
  },
  "Vue Component": {
    "prefix": "v-component",
    "description": "Vue component snippet",
    "body": [
      "import Vue from \"vue\";",
      "import Component from \"vue-class-component\";",
      "",
      "@Component({",
      "\ttemplate: require(\"${feature}.html\")",
      "})",
      "export class ${Feature}Component extends Vue {",
      "\tconstructor() {",
      "\t\tsuper();",
      "\t}",
      "",
      "\tmounted() { }$0",
      "}"
    ]
  },
  "Vue Component Http": {
    "prefix": "v-component-http",
    "description": "Vue component with http snippet",
    "body": [
      "import Vue from \"vue\";",
      "import Component from \"vue-class-component\";",
      "import axios, {AxiosResponse} from \"axios\";",
      "",
      "@Component({",
      "\ttemplate: require(\"${feature}.html\")",
      "})",
      "export class ${Feature}Component extends Vue {",
      "",
      "\tprivate url = \"\";",
      "",
      "\tconstructor() {",
      "\t\tsuper();",
      "\t\tthis.axios = axios;",
      "\t}",
      "",
      "\tmounted() {",
      "\t\tthis.axios.get(this.url).then((response: AxiosResponse) => {",
      "\t\t\tthis.items = response.data;",
      "\t\t}, (error) => {",
      "\t\t\tconsole.error(error);",
      "\t\t});",
      "}$0",
      "}"
    ]
  },
  "Vue Component Test": {
    "prefix": "v-component-test",
    "description": "Vue component test snippet",
    "body": [
      "import {expect} from \"chai\";",
      "import {${Feature}Component} from \"./${feature}\";",
      "import {ComponentTest} from \"./component-test\";",
      "",
      "describe(\"${Feature} component\", () => {",
      "\tlet directiveTest: ComponentTest;",
      "\tbeforeEach(() => {",
      "\t\tdirectiveTest = new ComponentTest(\"<div><${feature}></${feature}></div>\", { \"${feature}\": ${Feature}Component });",
      "\t});",
      "\tit(\"should render correct contents\", async () => {",
      "\t\tdirectiveTest.createComponent();",
      "\t\tawait directiveTest.execute((vm) => {",
      "\t\t\texpect(vm.$el.querySelector(\".someClass\").textContent).toBe(\"\");",
      "\t\t});",
      "\t});",
      "});"
    ]
  },
  "Vue Component Test Helper": {
    "prefix": "v-test-helper",
    "description": "Vue test helper snippet",
    "body": [
      "import Vue from \"vue\";",
      "import {SinonSpy} from \"sinon\";",
      "import merge from \"lodash.merge\";",
      "import { ILogger } from \"./log\";",
      "",
      "export interface IComponents {",
      "\t[key: string]: Vue.Component;",
      "}",
      "",
      "interface IExecuteCallback {",
      "\t(vm: Vue): void;",
      "}",
      "",
      "export interface IComponentTest {",
      "\tcreateComponent(createOptions?: any): void;",
      "\texecute(callback: IExecuteCallback): void;",
      "}",
      "",
      "export class ComponentTest implements IComponentTest {",
      "\tpublic vm: Vue;",
      "\tconstructor(private template: string, private components: IComponents) {",
      "\t}",
      "",
      "\tpublic createComponent(createOptions?: any): void {",
      "\t\tlet options = {",
      "\t\t\ttemplate: this.template,",
      "\t\t\tcomponents: this.components",
      "\t\t};",
      "\t\tif (createOptions) merge(options, createOptions);",
      "\t\tthis.vm = new Vue(options).$mount();",
      "\t}",
      "",
      "\tpublic execute(callback: IExecuteCallback): void {",
      "\t\tVue.nextTick(callback.bind(this, this.vm));",
      "\t}",
      "}"
    ]
  },
  "Vue Routes": {
    "prefix": "v-routing",
    "description": "Vue routing file snippet",
    "body": [
      "import Vue from \"vue\";",
      "import VueRouter from \"vue-router\";",
      "",
      "Vue.use(VueRouter);",
      "",
      "let router = new VueRouter({",
      "\troutes: [",
      "\t\t{ path: '${path}', component: ${Name}Component },",
      "\t]",
      "});",
      "",
      "new Vue({",
      "\tel: \"#app-main\",",
      "\trouter: router",
      "})"
    ]
  }
}
